package org.stanwood.media.store.mp4.mp4v2.lib;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
@SuppressWarnings("all")
public class MP4TagArtwork extends Structure {
	/**
	 * < raw picture data<br>
	 * C type : const void*
	 */
	public Pointer data;
	/// < data size in bytes
	public int size;
	/**
	 * @see MP4TagArtworkType<br>
	 * < data type<br>
	 * C type : MP4TagArtworkType
	 */
	public MP4TagArtworkType type;
	public MP4TagArtwork() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new java.lang.String[]{"data", "size", "type"});
	}
	/**
	 * @param data < raw picture data<br>
	 * C type : const void*<br>
	 * @param size < data size in bytes<br>
	 * @param type @see MP4TagArtworkType<br>
	 * < data type<br>
	 * C type : MP4TagArtworkType
	 */
	public MP4TagArtwork(Pointer data, int size, MP4TagArtworkType type) {
		super();
		this.data = data;
		this.size = size;
		this.type = type;
		initFieldOrder();
	}
	public static class ByReference extends MP4TagArtwork implements Structure.ByReference {

	};
	public static class ByValue extends MP4TagArtwork implements Structure.ByValue {

	};
}
