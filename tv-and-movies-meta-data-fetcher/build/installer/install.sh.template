#!/bin/bash

NAME=@@name@@
VERSION=@@version@@
FILE=@@file@@
MODE=@@mode@@

case "$0" in
  /*) INSTALLER_PATH=$0;;
  *) INSTALLER_PATH=`pwd`"/$0";;
esac

function untar_payload()
{
	match=$(grep --text --line-number '^PAYLOAD:$' $INSTALLER_PATH | cut -d ':' -f 1)
	payload_start=$((match + 1))
	if [[ $MODE -eq 0 ]]; then
		tail -n +$payload_start $INSTALLER_PATH | tar -xzvf -
		if [[ $? -ne 0 ]]; then
			echo "Unable to extract installer"
			exit 1
		fi
	fi
	if [[ $MODE -eq 1 ]]; then
		tail -n +$payload_start $INSTALLER_PATH | uudecode | tar -xzvf -
		if [[ $? -ne 0 ]]; then
			echo "Unable to extract installer"
			exit 1
		fi
	fi
}

# Create tmp work dir
tmp=""
mymktemp=`which mktemp`	
test -n $mymktemp && {
	tmp=`mktemp -d`
}
test -z $mymktemp && {
	tmp=${TMPDIR-/tmp}
	tmp=$tmp/$NAME.$RANDOM.$RANDOM.$RANDOM.$$
	(umask 077 && mkdir $tmp) || {
		echo "Could not create temporary directory! Exiting." 1>&2 
		exit 1
	}
}

# Extract installer
cd $tmp
untar_payload

# Start installer
# Set jvm heap initial and maximum sizes (in megabytes).
JAVA_HEAP_INIT_SIZE=64
JAVA_HEAP_MAX_SIZE=192

# Find a java installation.
if [ -z "$JAVA_HOME" ]; then
        echo "Warning: \$JAVA_HOME environment variable not set! Consider setting it."
        echo "          Attempting to locate java..."
        j=`which java 2>/dev/null`
        if [ -z "$j" ]; then
                echo "Failed to locate the java virtual machine! Bailing..."
                exit 1
        else
                echo "Found a virtual machine at: $j..."
                JAVA="$j"
        fi
else
        JAVA="$JAVA_HOME/bin/java"
fi
$JAVA -jar $FILE

# Clean up
rm -rf $tmp

exit 0
