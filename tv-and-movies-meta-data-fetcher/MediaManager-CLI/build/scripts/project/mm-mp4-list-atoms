#!/bin/sh

# Set jvm heap initial and maximum sizes (in megabytes).
JAVA_HEAP_INIT_SIZE=64
JAVA_HEAP_MAX_SIZE=192

# Find a java installation.
if [ -z "$JAVA_HOME" ]; then
        echo "Warning: \$JAVA_HOME environment variable not set! Consider setting it."
        echo "          Attempting to locate java..."
        j=`which java 2>/dev/null`
        if [ -z "$j" ]; then
                echo "Failed to locate the java virtual machine! Bailing..."
                exit 1
        else
                echo "Found a virtual machine at: $j..."
                JAVA="$j"
        fi
else
        JAVA="$JAVA_HOME/bin/java"
fi

if [ -z "${BASH_SOURCE}" ] ; then
    SCRIPT_PATH=`readlink -f  "$0"`
    CURRENT_DIR=`pwd`
    cd `dirname ${SCRIPT_PATH}` > /dev/null
    SCRIPT_PATH=`pwd`;
    cd $CURRENT_DIR
else
    SCRIPT_PATH="${BASH_SOURCE[0]}";
    if ([ -h "${SCRIPT_PATH}" ]) then
        while([ -h "${SCRIPT_PATH}" ]) do SCRIPT_PATH=`readlink "${SCRIPT_PATH}"`; done
    fi
    pushd . > /dev/null
    cd `dirname ${SCRIPT_PATH}` > /dev/null
    SCRIPT_PATH=`pwd`;
    popd  > /dev/null
fi

# Main class
MAIN=org.stanwood.media.store.mp4.CLIListAtoms

# Libraries location
LIB_DIR=$SCRIPT_PATH/../../../libs/run-time

# Launch application.
CLASSPATH="$SCRIPT_PATH/../../../bin"
for FILE in `find $LIB_DIR -name "*.jar"` 
do
	CLASSPATH=$CLASSPATH:$FILE	
done 

# Native lib location
export MM_NATIVE_DIR=$SCRIPT_PATH/../../../native


# Launch Application
exec $JAVA -Xms${JAVA_HEAP_INIT_SIZE}M -Xmx${JAVA_HEAP_MAX_SIZE}M -classpath $CLASSPATH $MAIN "$@"
