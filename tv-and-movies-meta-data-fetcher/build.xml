<project name="MediaManager" default="dist" basedir=".">

	<!-- Allow properties to be overridden by a property file -->
	<property file="build.properties" />

	<!-- Path properties -->
	<property name="dist.dir" location="${basedir}/dist" />
	<property name="native.dir" location="${basedir}/native" />	
	<property name="etc.dir" location="${basedir}/etc" />
	<property name="rpm.dir" location="${basedir}/rpm" />
	<property name="docs.dir" location="${basedir}/docs"/>
	<property name="userguide.dir" location="${docs.dir}/userguide" />	
	<property name="docbook.home"    value="${basedir}/docbook/xsl"/>	
	<property name="fo.dir"          value="${basedir}/fo"/>	
	<property name="installer.dir" location="${basedir}/build/installer"/>
	<property name="libs.dir" location="${basedir}/libs"/>
    
	<!-- Compiler properties -->
	<property name="javac.source" value="1.6" />
	<property name="javac.target" value="1.6" />

	<!-- Dist properties -->
	<property name="project.version" value="1.98" />
	<property name="project.author" value="John-Paul Stanford" />
	<property name="project.email" value="dev@stanwood.org.uk" />
	<property name="project.summary" value="A application for correcting the name of TV shows and films, using information from the internet."/>

	<!-- Lib classpaths -->
	<path id="installer.libs.classpath">
		<fileset dir="${libs.dir}/installer" includes="*.jar" />
	</path>
	<path id="fop.libs.classpath">
		<fileset dir="${libs.dir}/fop" includes="*.jar" />
	</path>
		
	<taskdef name="izpack" classname="com.izforge.izpack.ant.IzPackTask">
		<classpath refid="installer.libs.classpath"/>
	</taskdef>

	<!-- Fop setup -->
	<taskdef name="fop" classname="org.apache.fop.tools.anttasks.Fop">        
    	<classpath refid="fop.libs.classpath"/>	                      		
    </taskdef>	
		
	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${dist.dir}" />
		
		<echo message="${ant.project.name} ${project.version}" file="${basedir}/VERSION" />
		<echo message="${ant.project.name} ${project.version}" file="${basedir}/src/org/stanwood/media/VERSION" />
	</target>

	<target name="build" depends="init" description="build the sub projects">
		<ant antfile="MediaManager-CLI/build.xml" inheritAll="false">
			<property name="output.type" value="html"/>
			<property name="project.version" value="${project.version}" />
	<property name="project.author" value="${project.author}" />
	<property name="project.email" value="${project.email}" />
	<property name="project.summary" value="A application for correcting the name of TV shows and films, using information from the internet."/>
		</ant>
	</target>

	<target name="clean" description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete includeemptydirs="true" >
			<fileset dir="${build.dir}" includes="**/*"/>
			<fileset dir="${test.build.dir}" includes="**/*"/>
		</delete>
		<delete dir="${dist.dir}" />		
		<delete dir="${cobertura.dir}"/>
		<delete dir="${fo.dir}"/>
		<delete dir="${basedir}/docbook"/>
	</target>

	<target name="jars" description="generate the distribution">		
		<zip zipfile="${dist.dir}/${ant.project.name}-${project.version}-src.zip" compress="true">
			<zipfileset dir="MediaManager-CLI/${src.dir}" prefix="${ant.project.name}-${project.version}/MediaManager-CLI/src">
				<exclude name="**/ExpressionParser.java"/>
				<exclude name="**/ExpressionLexer.java"/>
			</zipfileset>			
			<zipfileset dir="MediaManager-CLI/${test.src.dir}" prefix="${ant.project.name}-${project.version}/MediaManager-CLI/tests"/>
			<zipfileset dir="${etc.dir}" prefix="${ant.project.name}-${project.version}/etc"/>			
			<zipfileset dir="${docs.dir}" prefix="${ant.project.name}-${project.version}/docs" includes ="**/*.xml"/>
			<zipfileset dir="${basedir}/build" prefix="${ant.project.name}-${project.version}/build"/>
			<zipfileset file="${basedir}/MediaManager-CLI/build.xml" prefix="${ant.project.name}-${project.version}/MediaManager-CLI"/>
			<zipfileset file="${basedir}/build.xml" prefix="${ant.project.name}-${project.version}"/>
			<zipfileset file="${basedir}/TODO" prefix="${ant.project.name}-${project.version}"/>
			<zipfileset file="${basedir}/VERSION" prefix="${ant.project.name}-${project.version}"/>
			<zipfileset file="${basedir}/COPYING" prefix="${ant.project.name}-${project.version}"/>
			<zipfileset file="${basedir}/Changelog" prefix="${ant.project.name}-${project.version}"/>
			<zipfileset file="${basedir}/Description" prefix="${ant.project.name}-${project.version}"/>
			<zipfileset file="${basedir}/.project" prefix="${ant.project.name}-${project.version}"/>
			<zipfileset file="${basedir}/.classpath" prefix="${ant.project.name}-${project.version}"/>
			<zipfileset file="${basedir}/opensuse-build.xml" prefix="${ant.project.name}-${project.version}"/>
			<zipfileset file="${basedir}/opensuse-11.4-build.xml" prefix="${ant.project.name}-${project.version}"/>
			<zipfileset file="${basedir}/one-jar-ant-task.xml" prefix="${ant.project.name}-${project.version}"/>
			<zipfileset file="${basedir}/docbook.zip" prefix="${ant.project.name}-${project.version}"/>
		</zip>
		
		<zip zipfile="${dist.dir}/${ant.project.name}-${project.version}-native.zip">
			<zipfileset dir="${native.dir}" prefix="native"/>
		</zip>		

		<mkdir dir="${dist.dir}/bin/${ant.project.name}-${project.version}" />				
		<copy todir="${dist.dir}/bin/${ant.project.name}-${project.version}">
			<fileset file="${dist.dir}/MediaManager-CLI-${project.version}.jar" />
		</copy>		
		
		<copy todir="${dist.dir}/bin/${ant.project.name}-${project.version}">
			<fileset file="${basedir}/VERSION" />
			<fileset file="${basedir}/COPYING" />
			<fileset file="${basedir}/MediaManager-CLI/build/scripts/**" />						
		</copy>		
		<copy file="${etc.dir}/defaultConfig.xml" tofile="${dist.dir}/bin/${ant.project.name}-${project.version}/mediafetcher-conf.xml"/>

		<zip file="${dist.dir}/${ant.project.name}-${project.version}-bin.zip" basedir="${dist.dir}/bin" compress="true"/>

		<delete dir="${dist.dir}/bin" />						
	</target>

	<!-- 
			http://wiki.wsmoak.net/cgi-bin/wiki.pl?DocBookToPDF
		-->					
	<target name="docs" description="Converts docbook xml into pdf" >
		<delete dir="${basedir}/docbook"/>		
		<mkdir dir="${basedir}/docbook"/>
		<mkdir dir="${userguide.dir}/html"/>
		
		<unzip src="docbook.zip" dest="${basedir}/docbook"/>
		
		<mkdir dir="${userguide.dir}/xml-updated"/>		
		<copy todir="${userguide.dir}/xml-updated" file="${userguide.dir}/xml/docbook.xml"/>		
		
		<replace file="${userguide.dir}/xml-updated/docbook.xml">
			<replacefilter token="@@version@@" value="${project.version}"/>
			<replacefilter token="@@name@@" value="${ant.project.name}"/>
			<replacefilter token="@@file@@" value="${ant.project.name}-${project.version}-install.jar"/>
			<replacefilter token="@@mode@@" value="0"/>
		</replace>
		
	    <xslt processor="trax"  style="${docbook.home}/fo/docbook.xsl"	         	     	
	            basedir="${userguide.dir}/xml-updated"
	            extension=".fo"
	            destdir="${fo.dir}" />
		
		<xslt processor="trax" style="${docbook.home}/html/docbook.xsl"	         	     	
			            basedir="${userguide.dir}/xml-updated"
			            extension=".html"
			            destdir="${userguide.dir}/html" />	

		<fop format="application/pdf" 
			 fofile="${fo.dir}/docbook.fo" 
			 outfile="${userguide.dir}/userguide.pdf" />
		<echo message="Here 4"/>
		<delete dir="${fo.dir}"/>
		<delete dir="${basedir}/docbook"/>
		<delete dir="${userguide.dir}/xml-updated"/>
	</target>
		
	<target name="installer" depends="jars">		
		<!-- Create java installer -->		
		<izpack input="${basedir}/build/installer/install.xml"
			    output="${dist.dir}/${ant.project.name}-${project.version}-install.jar"
				installerType="standard"
				inheritAll="true"
				basedir="${basedir}/build/installer"
				compression="deflate"
				compressionlevel="9"/>
		
		<!-- Create Linux Shell Installer -->
		<tar destfile="${dist.dir}/${ant.project.name}-${project.version}-install.tar">
			<tarfileset dir="${dist.dir}" preserveLeadingSlashes="true"> 
			    <include name="${ant.project.name}-${project.version}-install.jar"/>
			</tarfileset>
		</tar>		      
		<gzip destfile="${dist.dir}/${ant.project.name}-${project.version}-install.tar.gz" src="${dist.dir}/${ant.project.name}-${project.version}-install.tar"/>
		<delete file="${dist.dir}/${ant.project.name}-${project.version}-install.tar"/>
		
		<copy file="${basedir}/build/installer/install.sh.template" tofile="${dist.dir}/install.sh.template"/>		
		<echo file="${dist.dir}/install.sh.template" append="true" message="PAYLOAD:${line.separator}"/>
		<replace file="${dist.dir}/install.sh.template">
			<replacefilter token="@@version@@" value="${project.version}"/>
			<replacefilter token="@@name@@" value="${ant.project.name}"/>
			<replacefilter token="@@file@@" value="${ant.project.name}-${project.version}-install.jar"/>
			<replacefilter token="@@mode@@" value="0"/>
		</replace>
		
		<concat destfile="${dist.dir}/${ant.project.name}-${project.version}-install.sh" binary="yes">
			<fileset file="${dist.dir}/install.sh.template"/>
			<fileset file="${dist.dir}/${ant.project.name}-${project.version}-install.tar.gz"/>
		</concat>
		<delete file="${dist.dir}/install.sh.template"/>
		<chmod file="${dist.dir}/${ant.project.name}-${project.version}-install.sh" perm="ugo+rx"/>
		
		<!-- Make a native setup.exe out of the installer -->
		<!--
		<unzip src="${installer.dir}/installer-wrappers.zip" dest="${dist.dir}"/>		
		<chmod file="${dist.dir}/wrappers/izpack2exe/izpack2exe.py" perm="ugo+x"/>
		<chmod file="${dist.dir}/wrappers/izpack2exe/7za" perm="ugo+x"/>
		<chmod file="${dist.dir}/wrappers/izpack2exe/setup.py" perm="ugo+x"/>
		<chmod file="${dist.dir}/wrappers/izpack2exe/upx" perm="ugo+x"/>
		
		<exec dir="${dist.dir}/wrappers/izpack2exe" executable="./izpack2exe.py" failonerror="true">
			<arg value="- -file=&quot;${installer.dir}/install.xml&quot;"/>
		</exec>
		
		<zip zipfile="${dist.dir}/${ant.project.name}-${project.version}-install-windows.zip" compress="true">
			<zipfileset file="${dist.dir}/wrappers/izpack2exe/setup.exe" prefix=""/>
		</zip>
		-->
		
		<!-- Create a native mac installer -->
		<!--
		<copy todir="${dist.dir}/wrappers/izpack2app">
			<fileset dir="${installer.dir}/Mac-App-Template" includes="**/*"/>
		</copy>
		<chmod file="${dist.dir}/wrappers/izpack2app/izpack2app.py" perm="ugo+x"/>
		<chmod file="${dist.dir}/wrappers/izpack2app/setup.py" perm="ugo+x"/>
		
		<exec dir="${dist.dir}/wrappers/izpack2app" executable="./izpack2app.py" failonerror="true">
			<arg file="${dist.dir}/${ant.project.name}-${project.version}-install.jar"/>
			<arg file="${dist.dir}/${ant.project.name}-${project.version}-macosx.app"/>
		</exec>
		
		<delete dir="${dist.dir}/wrappers"/>
		-->
	</target>

	<target name="dist" depends="clean,build,docs,jars,installer"/>	
</project>
