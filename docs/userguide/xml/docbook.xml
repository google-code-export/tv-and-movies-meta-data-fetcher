<?xml version='1.0'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook V3.1//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
	<!ENTITY apptitle "MediaInfoFetcher">	
	<!ENTITY version "1.0">
	<!ENTITY mediarenamer "media-renamer">
]>
<book>
	<bookinfo>
		<title>&apptitle; user guide</title>
		<authorgroup>
			<author>
				<firstname>John-Paul</firstname>
				<surname>Stanford</surname>
				<affiliation>
					<address><email>dev@stanwood.org.uk</email></address>
				</affiliation>
			</author>			
		</authorgroup>
		<copyright>
			<year>2007</year>
			<holder>John-Paul Stanford</holder>
		</copyright>
		<abstract>	
			<para>
				This document describes usage of the application &apptitle; version &version;
			</para>
		</abstract>
	</bookinfo>	
	<chapter id="introduction">
		<title>Introduction</title>			
		<para>
			&apptitle; is a application and a API which can be used to retrieve TV show 
			and movie meta data from Internet sources. This information is then stored 
			locally and can be used to rename media files with the correct title.
		</para>		
		<sect1>
			<title>Features</title>
			<para>
				<itemizedlist>
					<listitem><para>Provides a CLI tool that renames media files with the correct names.</para></listitem>
					<listitem><para>Fetches TV Show meta data from the Internet.</para></listitem>
					<listitem><para>Allows multiple sources and stores.</para></listitem>
					<listitem><para>Caches information in XML.</para></listitem>
					<listitem><para>Runs on any platform that supports Java 1.6.</para></listitem>
					<listitem><para>Provides a API for accessing the information.</para></listitem>
					<listitem><para>Provides a store that writes Sapphire XML files.</para></listitem>
				</itemizedlist>				
			</para>
		</sect1>	
		<sect1>
			<title>Sources</title>
			<para>
				Sources are the places that &apptitle; retrives information from. Sources
				are read only so it's not possible to information back too them. In the 
				current version their is a source for retrieving TV Show information from
			    from www.tv.com, but &apptitle; has been created in such a way that it's
			    easy to add new sources. 
			</para>			
		</sect1>
		<sect1>
			<title>Stores</title>
			<para>
				Stores are similar too sources, except that they are also writable. Once
				information has been retrived from a source, it is written too a store.
				Next time the information is needed, it can be retrived from the store.
				This makes retriving information a lot faster.  
			</para>			
			<para>
				Their are 3 stores that come with &apptitle;				
			</para>
			<sect2>
				<title>org.stanwood.tv.</title>
				
			</sect2>
		</sect1>				
	</chapter>
	<chapter id="installation">
		<title>Installation</title>
		<para>
			Their are a few different ways to install &apptitle;. The different distributions 
		    can be found at <ulink url="http://code.google.com/p/tv-and-movies-meta-data-fetcher/downloads/list"><citetitle>Downloads</citetitle></ulink> 
		</para>
		<para>
			All of the distributions will require a Java 1.6 compatible JRE.
		</para>
		<sect1>
			<title>1. Linux Binary Distribution Packages</title>
			<para>
				Their are several linux distribution packages that can be found in the downloads section of the website.
				If your distribution uses RPM packages, then following these instructions.
				<orderedlist>
					<listitem><para>Pick the packages for your distribution</para></listitem>				
					<listitem><para>Download them to a directory</para></listitem>					
					<listitem><para>Change to that directory from the console</para></listitem>					
					<listitem><para>Log in as root and run the command <command>rpm -Uvh *.rpm</command></para></listitem>
				</orderedlist>				
			</para>
			<para>
				This will install the the application and a script too launch it. The script is located at <command>/usr/bin/media-renamer</command>
			</para>
		</sect1>		
		<sect1>
			<title>2. Any platform static Jar Disturbution</title>
			<para>
				Their is a static jar distribution avaliable on the downloads page. This will run on any platform with the
				correct JRE. Simply download it too your system, and type the command: <cmdsynopsis><command>java -jar MediaInfoFetcher-&version;-static-bin.jar </command><arg>options</arg></cmdsynopsis>. This
				can be used to rename media files and uses the same command line parameters as the <link linkend="mediarenamercmd">media-renamer</link> script.
			</para>
		</sect1>
	</chapter>
	<chapter id="usage">
		<title>CLI Usage</title>
		<para></para>
		<sect1 id="mediarenamercmd">
			<title id="mediarenamercmd.title">&mediarenamer;</title>
			<para>
				The &mediarenamer; command is used to rename media files such as TV Shows in a directory with the correct names.
				The information is fetched from sources and the information to when performing the renaming. In order that 
				it does not have to fetch the data every time, the data is cached in stores.
				<cmdsynopsis>
					<command>media-renamer</command>
					<arg>-h</arg>
					<arg>-s <replaceable>showId</replaceable></arg>
					<arg>-d <replaceable>show directory</replaceable></arg>
					<arg>-p <replaceable>rename pattern</replaceable></arg>
					<arg>-o <replaceable>source id</replaceable></arg>
					<arg>-r</arg>
					<arg>-c <replaceable>config file</replaceable></arg>
				</cmdsynopsis>
			</para>
			<para>
				The command has the following options:
				<itemizedlist>
					<listitem><para><literal>-h, --help</literal> Show the help message</para></listitem>
					<listitem><para><literal>-s, --showid</literal> The ID of the movie/show. If not present, then it will search for the show id.</para></listitem>
					<listitem><para><literal>-d, --showdir</literal> The directory to look for media. If not present use the current directory.</para></listitem>
					<listitem><para><literal>-p, --pattern</literal> The pattern used to rename files. Defaults to "%s %e - %t.%x" if not present.</para></listitem>
					<listitem><para><literal>-o, --source</literal> The id if the source too look up meta data in. Defaults too tvcom if not present.</para></listitem>
					<listitem><para><literal>-r, --refresh</literal> If this option is present, it will make the stores get regenerated from source.</para></listitem>
					<listitem><para><literal>-c, --config</literal> The location of the config file. If not present, attempts to load it from /etc/mediafetcher-conf.xml</para></listitem>
				</itemizedlist>				
			</para>			
			<para>
				The &mediarenamer; command presumes that each TV show's media files are contained 
				in a directory. It also has the ability to search for the TV Shows id by using the
				directory name as the name of the show, so it would be beneficial if the media
				files for each show are in a directory with the shows name. 								
			</para>
			<para>
				Too override the show ID been used, use the <literal>--showid</literal> option on 
				the CLI. If you are using stores, they will store the show id (if they support
				this functionality). This can then be used when searching for a show id instead
				of the directory name.				
			</para>
			<para>
				It is possible to configure which sources and stores are used by the application.
				This is done by using a configuration file. If the <literal>--config</literal> option
				is used, then the file passed into this is the configuration file that will be used.
				If the <literal>--config</literal> option is not used, then first off the application
				looks for a configuration file located at <filename>/etc/mediafetcher-conf.xml</filename>.
				If that can't be found, then it uses in built defaults. For more information on the configuration
				files, see the <link linkend="configuration">Configuration section</link>.
			</para>
			<sect2>
				<title>Pattern</title>
				<para>Each of the files that is renamed is done according to a pattern. A pattern 
				is a text string that contains tokens. These tokens are replaced by the
				show/episode information.  
				</para>
				<para>
					The following list contains the meaning for each token:
					<itemizedlist>
					 	<listitem><para><literal>%h</literal> - show Id</para></listitem>
 						<listitem><para><literal>%s</literal> - series number</para></listitem> 
 						<listitem><para><literal>%e</literal> - episode number</para></listitem>
 						<listitem><para><literal>%n</literal> - show name</para></listitem>
 						<listitem><para><literal>%t</literal> - episode title</para></listitem>
 						<listitem><para><literal>%x</literal> - extension (avi, mkv....)</para></listitem>
					</itemizedlist>
				</para>
				<sect3>
					<title>Examples:</title>
					<para>
						The following options show what happens when they are used to rename 
					     the 4th episode of the 2nd season of the show heroes.
					     <itemizedlist>
					     	<listitem><para>"S%s E%e - %t.%x" = "S2 E04 - The Kindness of Strangers.avi"</para></listitem>
					     	<listitem><para>"%sx%e.%n.%t.%x" = "2x04.Heroes.The Kindness of Strangers.avi"</para></listitem>
					     	<listitem><para>"%sx%e.%h.%t.%x" = "2x04.17552.The Kindness of Strangers.avi"</para></listitem>
					     </itemizedlist>
					</para>
				</sect3>
			</sect2>
		</sect1>
	</chapter>
	<chapter id="configuration">
		<title>Configuration</title>
		<para>The applications and the API make use of a XML configuration file. This
				tells them which sources and stores should be used.
		</para>
		<para>
			The applications have CLI options that can be used too tell it which configuration
			file too use. If this option is not present, then it will look for the file at the 
			location <filename>/etc/mediafetcher-conf.xml</filename>. If this can't be found,
			it will fall back too using default settings.
		</para>
		<para>
			The default file is as follows:
			<informalexample>								
			<![CDATA[			
		<config>\n
		       <sources>\n
		               <!-- www.tv.com TV Show information source -->\n
		               <source id="org.stanwood.tv.source.TVCOMSource"/>\n
		       </sources>\n
		       <stores>
		               <!-- Caches data in memory while the application is running -->
		               <store id="org.stanwood.tv.store.MemoryStore"/>
		
		               <!-- A Store for saving Show/Movies in a XML file in the current directory -->
		                <store id="org.stanwood.tv.store.XMLStore"/>
		        </stores>
		</config>			
			]]>			
			</informalexample>			
		</para>
	</chapter>
	<chapter id="credits-and-licenses">
		<title>Credits and Licenses</title>
		
		<para>&apptitle;</para>
		<itemizedlist>
			<listitem>
				<para>John-Paul Stanford <email>dev@stanwood.org.uk</email> - Original Author</para>
			</listitem>
		</itemizedlist>
		<para>
        	Documentation copyright 2008, John-Paul Stanford
            <email>dev@stanwood.org.uk</email>
		</para>		
	</chapter>
	
</book>